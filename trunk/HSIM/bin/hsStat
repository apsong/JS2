#! /bin/bash

PROGRAM=`basename $0`

##################### .JS/bin/_SH_UTIL_FUNCTIONS <BEGIN> #######################
EVAL()
{
    echo "#!CMD:[" $@ "]"
    eval "$@"
}

NEWFILE()
{
    FILE=$1; [ -z "$FILE" ] && { echo 1>&2 "($PROGRAM:NEWFILE)Error: FILE is not set"; exit 100;}

    REAL_FILE=.$FILE/`date "+%Y%m%d-%H%M%S"`#$FILE

    mkdir -p .$FILE || exit 101
    if [ -h $FILE ]; then
        rm -f $FILE
    elif [ -e $FILE ]; then
        echo 1>&2 "($PROGRAM:NEWFILE)Note: '$FILE' exists and is not a symbolic file. Renamed to '$REAL_FILE.bak'"
        mv $FILE $REAL_FILE.bak
    fi
    touch $REAL_FILE && ln -s $REAL_FILE $FILE && echo $REAL_FILE || exit 102
}
##################### .JS/bin/_SH_UTIL_FUNCTIONS <END> #########################

DO_STAT()
{
    local OLD_PWD=`pwd` #Here has to use the bash extension for local variable
    for DIR do
        cd $DIR || exit 2
        case `pwd | awk -F@ '{print $NF}' | awk -F/ '{print NF}'` in
            1|2) DO_STAT */;;
            3) DO_STAT *[0-9][smht]*/;;
            4)
                if [ -f hs.log ]; then
                    awk -v DIR=`pwd | sed -e 's/^.*@//'` '
                        /):/ {
                            if ($12 == "CPU") {
                                CPU=$14
                                DQL="-1"
                            } else if ($12 == "CPU=") {
                                CPU=$13
                                DQL=$NF
                            } else {
                                URL=gensub(",", "", "g", $14); Resp=$16
                            }
                        }
                        /Error page received/ {
                            ERROR++
                        }

                        END {
                            printf("%-64s  URL: %6s  Resp: %5s  CPU: %4s  DiskQ: %4s  ERROR: %d\n", DIR, URL, Resp, CPU, DQL, ERROR)
                        }' hs.log
                fi
                ;;
            *) echo 1>&2 "Error: Invalid root directory '$PWD' to traverse"; exit 1;;
        esac
        cd $OLD_PWD
    done
}

if [ $# -eq 0 ]; then
    EVAL DO_STAT .    "|" tee `NEWFILE $PROGRAM.log`
else 
    EVAL DO_STAT "$@" "|" tee `NEWFILE $PROGRAM.log`
fi
