#! /usr/bin/tclsh

set PROGRAM [file tail $argv0]

if {$argc < 2} {
    puts stderr "Usage: $PROGRAM HOST PORT SECONDS \[TICKLEN: default to 100\]"
    exit 1
}
set HOST [lindex $argv 0]
set PORT [lindex $argv 1]
set SECONDS [lindex $argv 2]
set TICKLEN [lindex $argv 3]
if {$TICKLEN == ""} {set TICKLEN 100}

if {[catch {socket $HOST $PORT} chan]} {
    puts stderr "Failed to connect to $HOST:$PORT : $chan"
    exit 2
}

proc CPU2average {CPU} {
    if {[llength $CPU] == 0} {
        return "-"
    }
    set sum 0
    foreach E $CPU {
        set sum [expr {$sum + $E}]
    }
    return [format "%2.1f" [expr {$sum/[llength $CPU]}]]
}
proc CPU2line {CPU average} {
    set cpu {}
    set lines {}
    foreach E $CPU {
        lappend cpu [format "%2.0f" $E]
        if {[llength $cpu] == 25} {
            lappend lines "[join $cpu { }]"
            set cpu {}
        }
    }
    if {[llength $cpu] > 0} {
        lappend lines "[join $cpu { }]"
        set cpu {}
    }
    return [format "\tCPU= % 4s   %s" $average ([join $lines "\n\t\t     "])/[llength $CPU]]
}

fconfigure $chan -buffering line -blocking 0
after 1000
puts $chan "metrics:cpu"

set averages {}
set CPU {}
set begin [clock seconds]
set end [expr $begin + $SECONDS]
while {[after 1000; set now [clock seconds]] <= $end} {
    set line [string trim [gets $chan]]
    if {$line == ""} { continue }
    lappend CPU $line
    if {($now - $begin) % $TICKLEN == 0} {
        set average [CPU2average $CPU]
        lappend averages $average
        puts [CPU2line $CPU $average]
        set CPU {}
    }
}
if {[llength $CPU] > 0} {
    set average [CPU2average $CPU]
    lappend averages $average
    puts [CPU2line $CPU $average]
    set CPU {}
}
puts $chan "exit"
while {[gets $chan line] >= 0} {}
close $chan

set averages [lrange $averages 1 end-1]
puts [format "Average from Tick 2 to Tick %.0f(when all users are active): CPU = %2.1f  %s" \
        [expr {$SECONDS*1.0/$TICKLEN-1}] [CPU2average $average] ($averages)/[llength $averages]]
