#! /usr/bin/tclsh

proc getIndex {test} {
    set index 0
    foreach pattern {
        *_AGGR_SUM_M_*
        *_AGGR_COUNT_D_*
        *_AGGR_COUNT_M_*
        *_AGGR_COUNTDISTINCT_D_*
        *_AGGR_COUNTDISTINCT_M_*
        *_JOIN_*
        *_FILTER_Low_EQ_*
        *_FILTER_Low_NE_*
        *_FILTER_Low_LT_*
        *_FILTER_Low_IN_*
        *_FILTER_High_EQ_x*
        *_FILTER_High_EQ_detail_*
        *_FILTER_High_GE_*
        *_FILTER_High_IN_*
        *_FILTER_Med_LE_*
        *_FILTER_X3groups_*        
        *_RTP_Trail2Y_*
        *_RTP_xTab_Trail2Q_*
        *_RTP_xTab_YTD_*
        *_xQualifier_*
        *_xTab_DATETIME_*
    } {
        if {[string match $pattern $test]} { return $index }
        incr index
    }
    return [incr index]
}
proc compTest {t1 t2} {
    set comp [expr [getIndex $t1] - [getIndex $t2]]
    return $comp==0 ? [string compare $t1 $t2] : $comp
}

##################################################################
if {$argc > 0} {
    set SEP [subst [lindex $argv 0]]
} else {
#set SEP ,
}

set TESTS {}
while {[gets stdin line]>=0} {
    if {[llength $line] < 11} { continue }
    if {[regexp {([^/]+)/([0-9]+)\.[0-9]+[tT]$} [lindex $line 0] {} TEST THREADS]} {
        set T [expr {$THREADS == 1 ? 1 : "M"}]
        set ${TEST}(THREADS_$T) $THREADS
        set ${TEST}(REPORTS_$T) [lindex $line 2]
        set ${TEST}(SECONDS_$T) [lindex $line 4]
        set ${TEST}(CPU_$T) [lindex $line 6]%
        if {[lsearch $TESTS $TEST] == -1} {
            lappend TESTS $TEST
        }
    }
}

set LINES {}
foreach TEST $TESTS {
    foreach K {THREADS_1 REPORTS_1 SECONDS_1 CPU_1 THREADS_M REPORTS_M SECONDS_M CPU_M} {
        if {![info exists ${TEST}($K)]} {
            set $K -
        } else {
            set $K [set ${TEST}($K)]
        }
    }
    if {[info exists SEP]} {
        lappend LINES [join \
            [list $TEST.rptdesign $THREADS_1 $REPORTS_1 $SECONDS_1 $CPU_1 $THREADS_M $REPORTS_M $SECONDS_M $CPU_M] \
            $SEP]
    } else {
        lappend LINES [format "%-40s    (%s) %6s %8s %6s    (%2s) %6s %8s %6s" \
                  $TEST.rptdesign $THREADS_1 $REPORTS_1 $SECONDS_1 $CPU_1 $THREADS_M $REPORTS_M $SECONDS_M $CPU_M]
    }
}

puts [join [lsort -command compTest $LINES] \n]

