#! /bin/sh

PROGRAM=`basename $0`

_EVAL()
{
    echo "#!CMD:[" $@ "]"
    eval "$@"
}

BASE64_DECODE()
{
    sed -e 's/%2[bB]/+/g' \
        -e 's/%2[eE]/./g' \
        -e 's|%2[fF]|/|g' \
        -e 's/%24/$/g' \
        -e 's/%3d/=/g' \
        -e 's/%5f/_/g' \
        -e 's/bA[a-zA-Z0-9/+=]\{254\}/BASE64[256]/g'
}

_ht()
{
    ARGS_TEST=`hsPrintf "%S %H $HSIM_HOME/%T 1 1i -V"` || exit 1
    LOG=`NEWFILE ht.log`

    _EVAL hsRun $ARGS_TEST "|" tee $LOG | egrep --line-buffered '( \| )|(^\[.*\]$)' | BASE64_DECODE
    ERRCNT=`grep ' | ' $LOG | egrep -c -v ' \| OK'`

    echo | tee -a $LOG
    echo "##########################!CMD:[ grep ' | ' $LOG ]########################" >> $LOG
    grep ' | ' $LOG | grep -v 'grep' | BASE64_DECODE >> $LOG

    if [ $ERRCNT -eq 0 -a `grep -c '| OK' $LOG` -gt 0 ]; then
        echo "($PROGRAM)Note: Hsim Test PASS. Verbose output is saved in $LOG"
        echo
        return 0
    else
        echo "($PROGRAM)Error: Hsim Test FAIL. Verbose output is saved in $LOG"
        echo
        return 1
    fi
}

_hs()
{
    ARGS_START=`hsPrintf "%S %H $HSIM_HOME/%T %N %L%V"` || exit 1

    case "$ARGS_START" in
        *[0-9][smhtTi]*)
                LOG=`NEWFILE hs.log`
                echo "#!CMD:[ hsRun $ARGS_START --job hs.perfmon ]" > $LOG
                _EVAL hsRun $ARGS_START --job hs.perfmon "|" tee -a $LOG
                ;;
        *)
                echo 1>&2 "Error: Invalid hsRun arguments '$ARGS_START'"
                ;;
    esac
}

ht()
{
    _ht; [ $DELAY -gt 0 ] && _EVAL sleep $DELAY
}
hs()
{
    _hs; [ $DELAY -gt 0 ] && _EVAL sleep $DELAY
}
hts()
{
    _ht || _ht && hs #Test twice, and start run if any test passed.
}

DELAY=0
REPEAT=1
while [ $# -gt 0 ]; do
    case "$1" in
        -D) shift; DELAY=$1;;
        -R) shift; REPEAT=$1;;
        *) DIRS="$DIRS $1";;
    esac
    shift
done
[ -z "$DIRS" ] && DIRS="$PWD"

ORIG_PWD="$PWD"
for i in `seq $REPEAT`; do
    [ $REPEAT -gt 1 ] && echo [ $i ]
    for DIR in $DIRS; do
        echo
        _EVAL cd "$DIR" && { $PROGRAM; true;} || echo 1>&2 "($PROGRAM)Error: Failed to enter directory '$DIR'"
        cd "$ORIG_PWD"
    done
done
