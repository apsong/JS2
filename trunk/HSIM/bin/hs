#! /bin/sh

PROGRAM=`basename $0`

##################### .JS/bin/_SH_UTIL_FUNCTIONS <BEGIN> #######################
EVAL()
{
    echo "#!CMD:[" $@ "]"
    eval "$@"
}

NEWFILE()
{
    FILE=$1; [ -z "$FILE" ] && { echo 1>&2 "($PROGRAM:NEWFILE)Error: FILE is not set"; exit 100;}

    REAL_FILE=.$FILE/`date "+%Y%m%d-%H%M%S"`#$FILE

    mkdir -p .$FILE || exit 101
    if [ -h $FILE ]; then
        rm -f $FILE
    elif [ -e $FILE ]; then
        echo 1>&2 "($PROGRAM:NEWFILE)Note: '$FILE' exists and is not a symbolic file. Renamed to '$REAL_FILE.bak'"
        mv $FILE $REAL_FILE.bak
    fi
    touch $REAL_FILE && ln -s $REAL_FILE $FILE && echo $REAL_FILE || exit 102
}
##################### .JS/bin/_SH_UTIL_FUNCTIONS <END> #########################

ERRSUM=0
DO_HSIM()
{
    SERVER_ADDR=`pwd | awk -F@ '{print $NF}' | awk -F/ '{print $1}'`
    SERVER_TYPE=`pwd | awk -F@ '{print $NF}' | awk -F/ '{print $2}'`
    ARG3=`pwd | awk -F@ '{print $NF}' | awk -F/ '{print $3}'`
    ARG4=`pwd | awk -F@ '{print $NF}' | awk -F/ '{print $4}'`

    case $SERVER_TYPE in
        AJC*)
            TEST_BASE=$HSIM_HOME/AJC
            ;;
        iServer*)
            TEST_BASE=$HSIM_HOME/iServer
            ;;
        *)
            echo 1>&2 "($PROGRAM)Error: Invalid SERVER_TYPE '$SERVER_TYPE'"
            exit 1
            ;;
    esac
    TESTCASE=$TEST_BASE/$ARG3/$ARG4.sim
    [ ! -f "$TESTCASE" ] && { echo 1>&2 "($PROGRAM)Error: TESTCASE '$TESTCASE' doesn't exist"; exit 1;}

    ARG5=`pwd | awk -F@ '{print $NF}' | awk -F/ '{print $5}' | sed -e 's/\[.*\]//g'`
    case "$ARG5" in
        *[0-9].*[0-9][smhti])
            CLIENT_NUM_DURATION=`echo "$ARG5" | sed -e 's/\./ /g'`
            if [ -z "$OPTS" ]; then
                LOG=`NEWFILE $PROGRAM.log`
            else
                LOG=`echo $PROGRAM.$OPTS.log | sed -e 's/ //g'`
                LOG=`NEWFILE $LOG`
            fi
            echo "#!CMD:[ hsRun $SERVER_TYPE $SERVER_ADDR $TESTCASE $CLIENT_NUM_DURATION --job hs.perfmon $OPTS]" > $LOG
            EVAL hsRun $SERVER_TYPE $SERVER_ADDR $TESTCASE $CLIENT_NUM_DURATION --job hs.perfmon $OPTS "|" tee -a $LOG
            ;;
        "")
            LOG=sanity.log
            EVAL hsRun $SERVER_TYPE $SERVER_ADDR $TESTCASE 1 1i -V $AJCS "|" tee $LOG | egrep '( \| )|(^\[.*\]$)'
            ERRCNT=`grep ' | ' $LOG | egrep -c -v ' \| OK'`

            echo | tee -a $LOG
            echo "##########################!CMD:[ grep ' | ' $LOG ]########################" >> $LOG
            grep ' | ' $LOG | grep -v 'grep' >> $LOG

            if [ $ERRCNT -eq 0 ]; then
                echo "($PROGRAM)Note: Sanity test PASS. Verbose output is saved in $LOG"
            else
                echo "($PROGRAM)Error: Sanity test FAIL. Verbose output is saved in $LOG"
                ERRSUM=`expr $ERRSUM '+' $ERRCNT`
            fi
            echo
            ;;
        *)
            echo 1>&2 "($PROGRAM)Error: Invalid CLIENT_NUM.DURATION '$ARG5'"
            exit 1
            ;;
    esac
}

while [ $# -gt 0 ]; do
    case "$1" in
        -R) shift; OPTS="$OPTS -R $1";;
        AJC*) AJCS="$AJCS $1"; OPTS="$OPTS $1";;
        *) DIRS="$DIRS $1";;
    esac
    shift
done
[ -z "$DIRS" ] && DIRS="$PWD"

ORIG_PWD="$PWD"
for DIR in $DIRS; do
    echo
    EVAL cd "$DIR" && DO_HSIM || echo 1>&2 "($PROGRAM)Error: Failed to enter directory '$DIR'"
    cd "$ORIG_PWD"
done

exit $ERRSUM
