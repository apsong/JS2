#! /bin/sh

PROGRAM=`basename $0`
usage()
{
    echo 1>&2 "Usage: $PROGRAM [DIR]... [-O 'hs_OPTIONS']"
    echo 1>&2 "Examples:"
    echo 1>&2 "       $PROGRAM     --Traverse directories from current directory and execute 'hs' in each"
    echo 1>&2 "       $PROGRAM Transient SV/23.SalesbyCustomer#pdf  --Traverse from the given directories"
    echo 1>&2 "       $PROGRAM SV -O 'AJC121207 -R 3 -D 60' --Travers and execute 'hs' with given options"
}

##################### .JS/bin/_SH_UTIL_FUNCTIONS <BEGIN> #######################
EVAL()
{
    echo "#!CMD:[" $@ "]"
    eval "$@"
}

NEWFILE()
{
    FILE=$1; [ -z "$FILE" ] && { echo 1>&2 "($PROGRAM:NEWFILE)Error: FILE is not set"; exit 100;}

    REAL_FILE=.$FILE/`date "+%Y%m%d-%H%M%S"`#$FILE

    mkdir -p .$FILE || exit 101
    if [ -h $FILE ]; then
        rm -f $FILE
    elif [ -e $FILE ]; then
        echo 1>&2 "($PROGRAM:NEWFILE)Note: '$FILE' exists and is not a symbolic file. Renamed to '$REAL_FILE.bak'"
        mv $FILE $REAL_FILE.bak
    fi
    touch $REAL_FILE && ln -s $REAL_FILE $FILE && echo $REAL_FILE || exit 102
}
##################### .JS/bin/_SH_UTIL_FUNCTIONS <END> #########################

DO_TRAVERSE()
{
    pwd | awk '{print "#!CMD:[ cd " $0 " ]"}'
    case `pwd | awk -F@ '{print $NF}' | awk -F/ '{print NF}'` in
        1|2|3) $PROGRAM */ -O "$OPTS";;
        4) EVAL "hs || hs && hs [0-9]*.*[0-9][smht] $OPTS";; #sanity (try twice) && execute
        5) EVAL "hs $OPTS";;
        *) echo 1>&2 "Error: Invalid root directory '$PWD' to traverse"; return 1;;
    esac
    echo
}

while [ $# -gt 0 ]; do
    case "$1" in
        --help) usage; exit 0;;
        -O) shift; OPTS="$1";;
        *) DIRS="$DIRS $1";;
    esac
    shift
done
[ -z "$DIRS" ] && DIRS="$PWD"

MAIN()
{
    ORIG_PWD="$PWD"
    for DIR in $DIRS; do
        echo
        cd "$DIR" && DO_TRAVERSE || echo 1>&2 "($PROGRAM)Error: Failed to enter directory '$DIR'"
        cd "$ORIG_PWD"
    done
}

if [ -z "$LOG4hsTraverse" ]; then
    if [ -z "$OPTS" ]; then
        LOG4hsTraverse=`NEWFILE $PROGRAM.log`
    else
        LOG4hsTraverse=`echo $PROGRAM.$OPTS.log | sed -e 's/ //g'`
        LOG4hsTraverse=`NEWFILE $LOG4hsTraverse`
    fi
    export LOG4hsTraverse

    MAIN | tee -a $LOG4hsTraverse
else
    MAIN
fi

exit $ERRSUM
